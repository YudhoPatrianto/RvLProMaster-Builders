name: Kernel Builder

on:
  workflow_dispatch:
    inputs:
      SELECT_CLANG:
        description: 'Choose Your Clang'
        required: true
        default: "ZYC Clang 20"
        type: choice
        options:
          - "ZYC Clang 20"
          - "WeebX Clang-20"
          - "Rastamod69 Clang-20"
      DEFCONFIG:
        description: "Insert Your Name Defconfig In Here"
        required:  true
      TELEGRAM_BOT_TOKEN:
        description: "Insert Your Telegram BOT Token In Here"
        required:  true
      CODENAME:
        description: "Insert Your Codename Phone In Here"
        required:  true
      KERNEL_SOURCE:
        description: "Insert Your Repository Kernel In Here"
        required:  true
      KERNEL_BRANCH:
        description: "Insert Branch Of Your Kernel From Repository In Here"
        required: true
      EMAIL_GITHUB:
        description: "Insert Your Email Where You Using Github"
        required: true
      USERNAME_GITHUB:
        description: "Insert Your Username Where You Using Github"
        required: true
jobs:
  build:
    name: "Building Kernel For ${{ inputs.CODENAME}} From Defconfig: ${{ inputs.DEFCONFIG }}"
    runs-on: ubuntu-latest
    env:
        TELEGRAM_BOT_TOKEN: ${{ inputs.TELEGRAM_BOT_TOKEN }}
        DEFCONFIG: ${{ inputs.DEFCONFIG }}
        CODENAME: ${{ inputs.CODENAME }}
        CLANG: ${{ inputs.SELECT_CLANG }}
        KERNEL_SOURCE: ${{ inputs.KERNEL_SOURCE }}
        KERNEL_BRANCH: ${{ inputs.KERNEL_BRANCH }}
        USERNAME: ${{ inputs.USERNAME_GITHUB }}
        EMAIL: ${{ inputs.EMAIL_GITHUB }}
    permissions:
        contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Display All Information
        run: |
          echo "Codename: ${{ env.CODENAME }}"
          echo "Defconfig: ${{ env.DEFCONFIG }}"
          echo "Clang: ${{ env.CLANG }}"
          echo "Kernel URL: ${{ env.KERNEL_SOURCE }}"
          echo "Kernel Branch: ${{ env.KERNEL_BRANCH }}"

          
      - name: Cleanup Disk
        uses: rokibhasansagar/slimhub_actions@main

      - name: Set Swap
        uses: pierotofy/set-swap-space@master
        with:
            swap-size-gb: 12

      - name: Installing Dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev -y

      - name: Creating Folder Directory
        run: |
          mkdir workdir
          cd workdir/

      - name: Cloning Kernel Source
        run: |
          echo "Clonning Kernel Source Into Disk $(pwd)"
          git clone ${{ env.KERNEL_SOURCE }} -b ${{ env.KERNEL_BRANCH }} builder-kernel
          cd builder-kernel/

      - name: Configuring Information Git
        run: |
          git config --global user.name ${{ env.USERNAME }}
          git config --global user.email ${{ env.EMAIL }}

      - name: Clonning Clang
        run: |
          # ZYC Clang 20
          if [[ "${{ env.CLANG }}" == *"ZYC Clang 20"* ]]; then
          mkdir clang
          cd clang/
          wget https://github.com/ZyCromerZ/Clang/releases/download/20.0.0git-20240902-release/Clang-20.0.0git-20240902.tar.gz -O zyc20.tar.gz
          tar -xvf zyc20.tar.gz
          rm -rf zyc20.tar.gz
          cd ../

          # WeebX Clang 20
          elif [[ "${{ env.CLANG }}" == *"WeebX Clang-20"* ]]; then
          mkdir clang
          cd clang/
          wget https://github.com/XSans0/WeebX-Clang/releases/download/WeebX-Clang-20.0.0git-release/WeebX-Clang-20.0.0git.tar.gz -O weebx20.tar.gz
          tar -xvf weebx20.tar.gz
          rm -rf weebx20.tar.gz
          cd ../
          
          # RastaMod Clang 20
          elif [[ "${{ env.CLANG }}" == *"Rastamod69 Clang-20"* ]]; then
          mkdir clang
          cd clang/
          wget https://github.com/kutemeikito/RastaMod69-Clang/releases/download/RastaMod69-Clang-20.0.0-release/RastaMod69-Clang-20.0.0.tar.gz -O rastamod20.tar.gz
          tar -xvf rastamod20.tar.gz
          rm -rf rastamod20.tar.gz
          cd ../

      - name: Building Kernel
        run: |
          export KBUILD_BUILD_USER=${{ env.USERNAME }}
          export KBUILD_BUILD_HOST=${{ env.USERNAME }}
          export PATH="$(pwd)/clang/bin:$PATH"
          export CROSS_COMPILE_COMPAT=arm-linux-gnueabi-
            make -j$(nproc --all) O=out ARCH=arm64 ${{ env.DEFCONFIG }}
            make -j$(nproc --all) ARCH=arm64 O=out \
            CC=clang \
            CROSS_COMPILE=aarch64-linux-gnu- \
            CROSS_COMPILE_ARM32=arm-linux-gnueabi-